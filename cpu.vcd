$date
	Fri Apr 21 00:01:41 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module main $end
$var wire 33 ! ROBa [32:0] $end
$var wire 1 " alu_unknown0 $end
$var wire 1 # alu_unknown1 $end
$var wire 1 $ bu_br_cond $end
$var wire 1 % bu_jmp $end
$var wire 6 & d1_tailA [5:0] $end
$var wire 1 ' d2_lookB0_ $end
$var wire 1 ( d2_lookB1_ $end
$var wire 1 ) flush $end
$var wire 1 * is_addiA $end
$var wire 1 + is_addiB $end
$var wire 1 , is_addiC $end
$var wire 1 - is_addiD $end
$var wire 1 . is_addrA $end
$var wire 1 / is_addrB $end
$var wire 1 0 is_addrC $end
$var wire 1 1 is_addrD $end
$var wire 1 2 is_aluA $end
$var wire 1 3 is_aluB $end
$var wire 1 4 is_aluC $end
$var wire 1 5 is_aluD $end
$var wire 1 6 is_aluunitA $end
$var wire 1 7 is_aluunitB $end
$var wire 1 8 is_aluunitC $end
$var wire 1 9 is_aluunitD $end
$var wire 1 : is_andiA $end
$var wire 1 ; is_andiB $end
$var wire 1 < is_andiC $end
$var wire 1 = is_andiD $end
$var wire 1 > is_andrA $end
$var wire 1 ? is_andrB $end
$var wire 1 @ is_andrC $end
$var wire 1 A is_andrD $end
$var wire 1 B is_jmpA $end
$var wire 1 C is_jmpB $end
$var wire 1 D is_jmpC $end
$var wire 1 E is_jmpD $end
$var wire 1 F is_jsrA $end
$var wire 1 G is_jsrB $end
$var wire 1 H is_jsrC $end
$var wire 1 I is_jsrD $end
$var wire 1 J is_jsrrA $end
$var wire 1 K is_jsrrB $end
$var wire 1 L is_jsrrC $end
$var wire 1 M is_jsrrD $end
$var wire 1 N is_ldunitA $end
$var wire 1 O is_ldunitB $end
$var wire 1 P is_ldunitC $end
$var wire 1 Q is_ldunitD $end
$var wire 1 R is_notA $end
$var wire 1 S is_notB $end
$var wire 1 T is_notC $end
$var wire 1 U is_notD $end
$var wire 1 V is_storeA $end
$var wire 1 W is_storeB $end
$var wire 1 X is_storeC $end
$var wire 1 Y is_storeD $end
$var wire 1 Z is_validA $end
$var wire 1 [ is_validB $end
$var wire 1 \ is_validC $end
$var wire 1 ] is_validD $end
$var wire 1 ^ load_flush $end
$var wire 1 _ load_is_ld $end
$var wire 16 ` mem_raddr [15:0] $end
$var wire 16 a pcA [15:0] $end
$var wire 1 b rob_wenD $end
$var wire 2 c store_buffer_commit [1:0] $end
$var wire 1 d useA0 $end
$var wire 1 e useA1 $end
$var wire 1 f useB0 $end
$var wire 1 g useB1 $end
$var wire 1 h useC0 $end
$var wire 1 i useC1 $end
$var wire 1 j useD0 $end
$var wire 1 k useD1 $end
$var wire 3 l waddr0 [2:0] $end
$var wire 3 m waddr1 [2:0] $end
$var wire 3 n waddr2 [2:0] $end
$var wire 16 o wdata0 [15:0] $end
$var wire 16 p wdata1 [15:0] $end
$var wire 16 q wdata2 [15:0] $end
$var wire 1 r wen0 $end
$var wire 1 s wen1 $end
$var wire 1 t wen2 $end
$var wire 1 u writeToRegA $end
$var wire 1 v writeToRegB $end
$var wire 1 w writeToRegC $end
$var wire 1 x writeToRegD $end
$var wire 3 y writeRegD [2:0] $end
$var wire 3 z writeRegC [2:0] $end
$var wire 3 { writeRegB [2:0] $end
$var wire 3 | writeRegA [2:0] $end
$var wire 2 } useD [1:0] $end
$var wire 2 ~ useC [1:0] $end
$var wire 2 !" useB [1:0] $end
$var wire 2 "" useA [1:0] $end
$var wire 16 #" trap_read [15:0] $end
$var wire 16 $" target [15:0] $end
$var wire 1 %" rob_wenC $end
$var wire 1 &" rob_wenB $end
$var wire 1 '" rob_wenA $end
$var wire 3 (" regD1 [2:0] $end
$var wire 3 )" regD0 [2:0] $end
$var wire 3 *" regC1 [2:0] $end
$var wire 3 +" regC0 [2:0] $end
$var wire 3 ," regB1 [2:0] $end
$var wire 3 -" regB0 [2:0] $end
$var wire 3 ." regA1 [2:0] $end
$var wire 3 /" regA0 [2:0] $end
$var wire 184 0" rdata [183:0] $end
$var wire 24 1" raddr [23:0] $end
$var wire 16 2" pc_offset11D [15:0] $end
$var wire 16 3" pc_offset11C [15:0] $end
$var wire 16 4" pc_offset11B [15:0] $end
$var wire 16 5" pc_offset11A [15:0] $end
$var wire 16 6" pcD [15:0] $end
$var wire 16 7" pcC [15:0] $end
$var wire 16 8" pcB [15:0] $end
$var wire 4 9" opcodeD [3:0] $end
$var wire 4 :" opcodeC [3:0] $end
$var wire 4 ;" opcodeB [3:0] $end
$var wire 4 <" opcodeA [3:0] $end
$var wire 16 =" offset6D [15:0] $end
$var wire 16 >" offset6C [15:0] $end
$var wire 16 ?" offset6B [15:0] $end
$var wire 16 @" offset6A [15:0] $end
$var wire 1 A" mem_wen $end
$var wire 16 B" mem_wdata [15:0] $end
$var wire 16 C" mem_waddr [15:0] $end
$var wire 16 D" mem_rdata [15:0] $end
$var wire 1 E" lsu_used $end
$var wire 6 F" lsu_rob [5:0] $end
$var wire 1 G" lsu_out_valid $end
$var wire 57 H" lsu_out [56:0] $end
$var wire 6 I" lsu_offset6 [5:0] $end
$var wire 16 J" lsu_in_loc1 [15:0] $end
$var wire 16 K" lsu_in_loc0 [15:0] $end
$var wire 16 L" lsu_in_loc [15:0] $end
$var wire 16 M" lsu_data [15:0] $end
$var wire 1 N" load_stall $end
$var wire 6 O" load_opcode [5:0] $end
$var wire 1 P" ld_feedervalidD $end
$var wire 1 Q" ld_feedervalidC $end
$var wire 1 R" ld_feedervalidB $end
$var wire 1 S" ld_feedervalidA $end
$var wire 57 T" ld_feederD [56:0] $end
$var wire 57 U" ld_feederC [56:0] $end
$var wire 57 V" ld_feederB [56:0] $end
$var wire 57 W" ld_feederA [56:0] $end
$var wire 1 X" is_trapD $end
$var wire 1 Y" is_trapC $end
$var wire 1 Z" is_trapB $end
$var wire 1 [" is_trapA $end
$var wire 1 \" is_strD $end
$var wire 1 ]" is_strC $end
$var wire 1 ^" is_strB $end
$var wire 1 _" is_strA $end
$var wire 1 `" is_stiD $end
$var wire 1 a" is_stiC $end
$var wire 1 b" is_stiB $end
$var wire 1 c" is_stiA $end
$var wire 1 d" is_stD $end
$var wire 1 e" is_stC $end
$var wire 1 f" is_stB $end
$var wire 1 g" is_stA $end
$var wire 1 h" is_retiD $end
$var wire 1 i" is_retiC $end
$var wire 1 j" is_retiB $end
$var wire 1 k" is_retiA $end
$var wire 1 l" is_retD $end
$var wire 1 m" is_retC $end
$var wire 1 n" is_retB $end
$var wire 1 o" is_retA $end
$var wire 1 p" is_leaD $end
$var wire 1 q" is_leaC $end
$var wire 1 r" is_leaB $end
$var wire 1 s" is_leaA $end
$var wire 1 t" is_ldrD $end
$var wire 1 u" is_ldrC $end
$var wire 1 v" is_ldrB $end
$var wire 1 w" is_ldrA $end
$var wire 1 x" is_ldiD $end
$var wire 1 y" is_ldiC $end
$var wire 1 z" is_ldiB $end
$var wire 1 {" is_ldiA $end
$var wire 1 |" is_ldD $end
$var wire 1 }" is_ldC $end
$var wire 1 ~" is_ldB $end
$var wire 1 !# is_ldA $end
$var wire 1 "# is_brD $end
$var wire 1 ## is_brC $end
$var wire 1 $# is_brB $end
$var wire 1 %# is_brA $end
$var wire 16 &# instructD [15:0] $end
$var wire 16 '# instructC [15:0] $end
$var wire 16 (# instructB [15:0] $end
$var wire 16 )# instructA [15:0] $end
$var wire 16 *# imm5D [15:0] $end
$var wire 16 +# imm5C [15:0] $end
$var wire 16 ,# imm5B [15:0] $end
$var wire 16 -# imm5A [15:0] $end
$var wire 6 .# headOfROB [5:0] $end
$var wire 23 /# forwardD [22:0] $end
$var wire 23 0# forwardC [22:0] $end
$var wire 23 1# forwardB [22:0] $end
$var wire 23 2# forwardA [22:0] $end
$var wire 16 3# d2_valueD1 [15:0] $end
$var wire 16 4# d2_valueD0 [15:0] $end
$var wire 16 5# d2_valueC1 [15:0] $end
$var wire 16 6# d2_valueC0 [15:0] $end
$var wire 16 7# d2_valueB1 [15:0] $end
$var wire 16 8# d2_valueB0 [15:0] $end
$var wire 16 9# d2_valueA1 [15:0] $end
$var wire 16 :# d2_valueA0 [15:0] $end
$var wire 2 ;# d2_useD [1:0] $end
$var wire 2 <# d2_useC [1:0] $end
$var wire 2 =# d2_useB [1:0] $end
$var wire 2 ># d2_useA [1:0] $end
$var wire 23 ?# d2_rdataD1 [22:0] $end
$var wire 23 @# d2_rdataD0 [22:0] $end
$var wire 23 A# d2_rdataC1 [22:0] $end
$var wire 23 B# d2_rdataC0 [22:0] $end
$var wire 23 C# d2_rdataB1 [22:0] $end
$var wire 23 D# d2_rdataB0 [22:0] $end
$var wire 23 E# d2_rdataA1 [22:0] $end
$var wire 23 F# d2_rdataA0 [22:0] $end
$var wire 57 G# d2_outputD [56:0] $end
$var wire 57 H# d2_outputC [56:0] $end
$var wire 57 I# d2_outputB [56:0] $end
$var wire 57 J# d2_outputA [56:0] $end
$var wire 6 K# d2_lookD1 [5:0] $end
$var wire 6 L# d2_lookD0 [5:0] $end
$var wire 6 M# d2_lookC1 [5:0] $end
$var wire 6 N# d2_lookC0 [5:0] $end
$var wire 6 O# d2_lookB1 [5:0] $end
$var wire 6 P# d2_lookB0 [5:0] $end
$var wire 6 Q# d2_lookA1 [5:0] $end
$var wire 6 R# d2_lookA0 [5:0] $end
$var wire 6 S# d1_tailD [5:0] $end
$var wire 6 T# d1_tailC [5:0] $end
$var wire 6 U# d1_tailB [5:0] $end
$var wire 20 V# d1_instructD [19:0] $end
$var wire 20 W# d1_instructC [19:0] $end
$var wire 20 X# d1_instructB [19:0] $end
$var wire 20 Y# d1_instructA [19:0] $end
$var wire 3 Z# condition_code_D [2:0] $end
$var wire 3 [# condition_code_B [2:0] $end
$var wire 3 \# condition_code_A [2:0] $end
$var wire 1 ]# clk $end
$var wire 1 ^# buq_used $end
$var wire 57 _# buq_out [56:0] $end
$var wire 1 `# bu_rs_valid $end
$var wire 42 a# bu_rs_out [41:0] $end
$var wire 16 b# bu_r7 [15:0] $end
$var wire 16 c# bu_pc_offset [15:0] $end
$var wire 4 d# bu_nzp [3:0] $end
$var wire 1 e# bu_is_jsr $end
$var wire 1 f# bu_is_jmp $end
$var wire 1 g# bu_is_br $end
$var wire 1 h# bu_feedervalidD $end
$var wire 1 i# bu_feedervalidC $end
$var wire 1 j# bu_feedervalidB $end
$var wire 1 k# bu_feedervalidA $end
$var wire 57 l# bu_feederD [56:0] $end
$var wire 57 m# bu_feederC [56:0] $end
$var wire 57 n# bu_feederB [56:0] $end
$var wire 57 o# bu_feederA [56:0] $end
$var wire 2 p# bu_buq_used [1:0] $end
$var wire 1 q# alu_rs_1_valid $end
$var wire 42 r# alu_rs_1_out [41:0] $end
$var wire 1 s# alu_rs_0_valid $end
$var wire 42 t# alu_rs_0_out [41:0] $end
$var wire 1 u# alu_queue_used_1 $end
$var wire 1 v# alu_queue_used_0 $end
$var wire 2 w# alu_queue_used [1:0] $end
$var wire 57 x# alu_queue_out1 [56:0] $end
$var wire 57 y# alu_queue_out0 [56:0] $end
$var wire 16 z# alu_out1 [15:0] $end
$var wire 16 {# alu_out0 [15:0] $end
$var wire 1 |# alu_feedervalidD $end
$var wire 1 }# alu_feedervalidC $end
$var wire 1 ~# alu_feedervalidB $end
$var wire 1 !$ alu_feedervalidA $end
$var wire 57 "$ alu_feederD [56:0] $end
$var wire 57 #$ alu_feederC [56:0] $end
$var wire 57 $$ alu_feederB [56:0] $end
$var wire 57 %$ alu_feederA [56:0] $end
$var reg 6 &$ ROBhead [5:0] $end
$var reg 6 '$ ROBsize [5:0] $end
$var reg 6 ($ ROBtail [5:0] $end
$var reg 4 )$ alu_opcode0 [3:0] $end
$var reg 4 *$ alu_opcode1 [3:0] $end
$var reg 6 +$ alu_rob0 [5:0] $end
$var reg 6 ,$ alu_rob1 [5:0] $end
$var reg 1 -$ alu_valid0 $end
$var reg 1 .$ alu_valid1 $end
$var reg 16 /$ alu_value0A [15:0] $end
$var reg 16 0$ alu_value0B [15:0] $end
$var reg 16 1$ alu_value1A [15:0] $end
$var reg 16 2$ alu_value1B [15:0] $end
$var reg 4 3$ bu_opcode [3:0] $end
$var reg 11 4$ bu_pcoffset11 [10:0] $end
$var reg 16 5$ bu_pcval [15:0] $end
$var reg 1 6$ bu_rflag $end
$var reg 6 7$ bu_rob [5:0] $end
$var reg 1 8$ bu_valid $end
$var reg 16 9$ bu_value [15:0] $end
$var reg 1 ) cu_flush $end
$var reg 16 :$ cu_target [15:0] $end
$var reg 3 ;$ cu_waddr0 [2:0] $end
$var reg 3 <$ cu_waddr1 [2:0] $end
$var reg 3 =$ cu_waddr2 [2:0] $end
$var reg 16 >$ cu_wdata0 [15:0] $end
$var reg 16 ?$ cu_wdata1 [15:0] $end
$var reg 16 @$ cu_wdata2 [15:0] $end
$var reg 1 A$ cu_wen0 $end
$var reg 1 B$ cu_wen1 $end
$var reg 1 C$ cu_wen2 $end
$var reg 1 D$ d1_pcA $end
$var reg 1 E$ d1_pcB $end
$var reg 1 F$ d1_pcC $end
$var reg 1 G$ d1_pcD $end
$var reg 16 H$ d2_imm5A [15:0] $end
$var reg 16 I$ d2_imm5B [15:0] $end
$var reg 16 J$ d2_imm5C [15:0] $end
$var reg 16 K$ d2_imm5D [15:0] $end
$var reg 20 L$ d2_instructA [19:0] $end
$var reg 20 M$ d2_instructB [19:0] $end
$var reg 20 N$ d2_instructC [19:0] $end
$var reg 20 O$ d2_instructD [19:0] $end
$var reg 1 P$ d2_is_aluA $end
$var reg 1 Q$ d2_is_aluB $end
$var reg 1 R$ d2_is_aluC $end
$var reg 1 S$ d2_is_aluD $end
$var reg 1 T$ d2_is_aluunitA $end
$var reg 1 U$ d2_is_aluunitB $end
$var reg 1 V$ d2_is_aluunitC $end
$var reg 1 W$ d2_is_aluunitD $end
$var reg 1 X$ d2_is_brA $end
$var reg 1 Y$ d2_is_brB $end
$var reg 1 Z$ d2_is_brC $end
$var reg 1 [$ d2_is_brD $end
$var reg 1 \$ d2_is_bunitA $end
$var reg 1 ]$ d2_is_bunitB $end
$var reg 1 ^$ d2_is_bunitC $end
$var reg 1 _$ d2_is_bunitD $end
$var reg 1 `$ d2_is_ldunitA $end
$var reg 1 a$ d2_is_ldunitB $end
$var reg 1 b$ d2_is_ldunitC $end
$var reg 1 c$ d2_is_ldunitD $end
$var reg 16 d$ d2_offset6A [15:0] $end
$var reg 16 e$ d2_offset6B [15:0] $end
$var reg 16 f$ d2_offset6C [15:0] $end
$var reg 16 g$ d2_offset6D [15:0] $end
$var reg 4 h$ d2_opcodeA [3:0] $end
$var reg 4 i$ d2_opcodeB [3:0] $end
$var reg 4 j$ d2_opcodeC [3:0] $end
$var reg 4 k$ d2_opcodeD [3:0] $end
$var reg 16 l$ d2_pc_offset11A [15:0] $end
$var reg 16 m$ d2_pc_offset11B [15:0] $end
$var reg 16 n$ d2_pc_offset11C [15:0] $end
$var reg 16 o$ d2_pc_offset11D [15:0] $end
$var reg 3 p$ d2_regA0 [2:0] $end
$var reg 3 q$ d2_regA1 [2:0] $end
$var reg 3 r$ d2_regB0 [2:0] $end
$var reg 3 s$ d2_regB1 [2:0] $end
$var reg 3 t$ d2_regC0 [2:0] $end
$var reg 3 u$ d2_regC1 [2:0] $end
$var reg 3 v$ d2_regD0 [2:0] $end
$var reg 3 w$ d2_regD1 [2:0] $end
$var reg 6 x$ d2_tailA [5:0] $end
$var reg 6 y$ d2_tailB [5:0] $end
$var reg 6 z$ d2_tailC [5:0] $end
$var reg 6 {$ d2_tailD [5:0] $end
$var reg 2 |$ d2_useA_ [1:0] $end
$var reg 2 }$ d2_useB_ [1:0] $end
$var reg 2 ~$ d2_useC_ [1:0] $end
$var reg 2 !% d2_useD_ [1:0] $end
$var reg 3 "% d2_writeRegA [2:0] $end
$var reg 3 #% d2_writeRegB [2:0] $end
$var reg 3 $% d2_writeRegC [2:0] $end
$var reg 3 %% d2_writeRegD [2:0] $end
$var reg 1 &% d2_writeToRegA $end
$var reg 1 '% d2_writeToRegB $end
$var reg 1 (% d2_writeToRegC $end
$var reg 1 )% d2_writeToRegD $end
$var reg 1 *% halt $end
$var reg 16 +% pc [15:0] $end
$scope module alu_feeder $end
$var wire 57 ,% inOperationA [56:0] $end
$var wire 57 -% inOperationB [56:0] $end
$var wire 57 .% inOperationC [56:0] $end
$var wire 57 /% inOperationD [56:0] $end
$var wire 57 0% outOperationD [56:0] $end
$var wire 1 !$ outValidA $end
$var wire 1 |# outValidD $end
$var wire 1 T$ validA $end
$var wire 1 U$ validB $end
$var wire 1 V$ validC $end
$var wire 1 W$ validD $end
$var wire 1 }# outValidC $end
$var wire 1 ~# outValidB $end
$var wire 57 1% outOperationC [56:0] $end
$var wire 57 2% outOperationB [56:0] $end
$var wire 57 3% outOperationA [56:0] $end
$upscope $end
$scope module alu_queue $end
$var wire 1 4% flush $end
$var wire 23 5% forwardA [22:0] $end
$var wire 23 6% forwardB [22:0] $end
$var wire 23 7% forwardC [22:0] $end
$var wire 23 8% forwardD [22:0] $end
$var wire 6 9% inLook0A [5:0] $end
$var wire 6 :% inLook0B [5:0] $end
$var wire 6 ;% inLook1A [5:0] $end
$var wire 6 <% inLook1B [5:0] $end
$var wire 6 =% inLook2A [5:0] $end
$var wire 6 >% inLook2B [5:0] $end
$var wire 6 ?% inLook3A [5:0] $end
$var wire 6 @% inLook3B [5:0] $end
$var wire 4 A% inOperation0 [3:0] $end
$var wire 4 B% inOperation1 [3:0] $end
$var wire 4 C% inOperation2 [3:0] $end
$var wire 4 D% inOperation3 [3:0] $end
$var wire 6 E% inROB0 [5:0] $end
$var wire 6 F% inROB1 [5:0] $end
$var wire 6 G% inROB2 [5:0] $end
$var wire 6 H% inROB3 [5:0] $end
$var wire 1 I% inReady0 $end
$var wire 1 J% inReady1 $end
$var wire 1 K% inReady2 $end
$var wire 1 L% inReady3 $end
$var wire 2 M% inUse0 [1:0] $end
$var wire 2 N% inUse1 [1:0] $end
$var wire 2 O% inUse2 [1:0] $end
$var wire 2 P% inUse3 [1:0] $end
$var wire 16 Q% inValue0A [15:0] $end
$var wire 16 R% inValue0B [15:0] $end
$var wire 16 S% inValue1A [15:0] $end
$var wire 16 T% inValue1B [15:0] $end
$var wire 16 U% inValue2A [15:0] $end
$var wire 16 V% inValue2B [15:0] $end
$var wire 16 W% inValue3A [15:0] $end
$var wire 16 X% inValue3B [15:0] $end
$var wire 2 Y% taken [1:0] $end
$var wire 57 Z% outOperation1 [56:0] $end
$var wire 57 [% outOperation0 [56:0] $end
$var wire 1 ]# clk $end
$var reg 6 \% head [5:0] $end
$var reg 6 ]% tail [5:0] $end
$var integer 32 ^% i [31:0] $end
$upscope $end
$scope module alu_rs0 $end
$var wire 1 ) flush $end
$var wire 23 _% forwardA [22:0] $end
$var wire 23 `% forwardB [22:0] $end
$var wire 23 a% forwardC [22:0] $end
$var wire 23 b% forwardD [22:0] $end
$var wire 57 c% inOperation [56:0] $end
$var wire 1 v# operationUsed $end
$var wire 1 s# outOperationValid $end
$var wire 42 d% outOperation [41:0] $end
$var wire 3 e% operationIndex [2:0] $end
$var wire 1 ]# clk $end
$var reg 5 f% commited [0:4] $end
$var integer 32 g% i [31:0] $end
$upscope $end
$scope module alu_rs1 $end
$var wire 1 ) flush $end
$var wire 23 h% forwardA [22:0] $end
$var wire 23 i% forwardB [22:0] $end
$var wire 23 j% forwardC [22:0] $end
$var wire 23 k% forwardD [22:0] $end
$var wire 57 l% inOperation [56:0] $end
$var wire 1 u# operationUsed $end
$var wire 1 q# outOperationValid $end
$var wire 42 m% outOperation [41:0] $end
$var wire 3 n% operationIndex [2:0] $end
$var wire 1 ]# clk $end
$var reg 5 o% commited [0:4] $end
$var integer 32 p% i [31:0] $end
$upscope $end
$scope module bu_feeder $end
$var wire 57 q% inOperationA [56:0] $end
$var wire 57 r% inOperationB [56:0] $end
$var wire 57 s% inOperationC [56:0] $end
$var wire 57 t% inOperationD [56:0] $end
$var wire 57 u% outOperationD [56:0] $end
$var wire 1 k# outValidA $end
$var wire 1 h# outValidD $end
$var wire 1 \$ validA $end
$var wire 1 ]$ validB $end
$var wire 1 ^$ validC $end
$var wire 1 _$ validD $end
$var wire 1 i# outValidC $end
$var wire 1 j# outValidB $end
$var wire 57 v% outOperationC [56:0] $end
$var wire 57 w% outOperationB [56:0] $end
$var wire 57 x% outOperationA [56:0] $end
$upscope $end
$scope module bu_queue $end
$var wire 1 y% flush $end
$var wire 23 z% forwardA [22:0] $end
$var wire 23 {% forwardB [22:0] $end
$var wire 23 |% forwardC [22:0] $end
$var wire 23 }% forwardD [22:0] $end
$var wire 6 ~% inLook0A [5:0] $end
$var wire 6 !& inLook0B [5:0] $end
$var wire 6 "& inLook1A [5:0] $end
$var wire 6 #& inLook1B [5:0] $end
$var wire 6 $& inLook2A [5:0] $end
$var wire 6 %& inLook2B [5:0] $end
$var wire 6 && inLook3A [5:0] $end
$var wire 6 '& inLook3B [5:0] $end
$var wire 4 (& inOperation0 [3:0] $end
$var wire 4 )& inOperation1 [3:0] $end
$var wire 4 *& inOperation2 [3:0] $end
$var wire 4 +& inOperation3 [3:0] $end
$var wire 6 ,& inROB0 [5:0] $end
$var wire 6 -& inROB1 [5:0] $end
$var wire 6 .& inROB2 [5:0] $end
$var wire 6 /& inROB3 [5:0] $end
$var wire 1 0& inReady0 $end
$var wire 1 1& inReady1 $end
$var wire 1 2& inReady2 $end
$var wire 1 3& inReady3 $end
$var wire 2 4& inUse0 [1:0] $end
$var wire 2 5& inUse1 [1:0] $end
$var wire 2 6& inUse2 [1:0] $end
$var wire 2 7& inUse3 [1:0] $end
$var wire 16 8& inValue0A [15:0] $end
$var wire 16 9& inValue0B [15:0] $end
$var wire 16 :& inValue1A [15:0] $end
$var wire 16 ;& inValue1B [15:0] $end
$var wire 16 <& inValue2A [15:0] $end
$var wire 16 =& inValue2B [15:0] $end
$var wire 16 >& inValue3A [15:0] $end
$var wire 16 ?& inValue3B [15:0] $end
$var wire 2 @& taken [1:0] $end
$var wire 57 A& outOperation1 [56:0] $end
$var wire 57 B& outOperation0 [56:0] $end
$var wire 1 ]# clk $end
$var reg 6 C& head [5:0] $end
$var reg 6 D& tail [5:0] $end
$var integer 32 E& i [31:0] $end
$upscope $end
$scope module bu_rs $end
$var wire 1 ) flush $end
$var wire 23 F& forwardA [22:0] $end
$var wire 23 G& forwardB [22:0] $end
$var wire 23 H& forwardC [22:0] $end
$var wire 23 I& forwardD [22:0] $end
$var wire 57 J& inOperation [56:0] $end
$var wire 1 ^# operationUsed $end
$var wire 1 `# outOperationValid $end
$var wire 42 K& outOperation [41:0] $end
$var wire 3 L& operationIndex [2:0] $end
$var wire 1 ]# clk $end
$var reg 5 M& commited [0:4] $end
$var integer 32 N& i [31:0] $end
$upscope $end
$scope module c0 $end
$var wire 1 ]# clk $end
$var reg 1 O& theClock $end
$upscope $end
$scope module ctr $end
$var wire 1 ]# clk $end
$var wire 1 *% isHalt $end
$var reg 32 P& count [31:0] $end
$upscope $end
$scope module lsu $end
$var wire 6 Q& ROBloc [5:0] $end
$var wire 1 ]# clk $end
$var wire 16 R& data [15:0] $end
$var wire 1 ^ flush $end
$var wire 1 E" input_valid $end
$var wire 1 _ is_ld $end
$var wire 1 N" load_stall $end
$var wire 16 S& location [15:0] $end
$var wire 16 T& mem_location [15:0] $end
$var wire 1 U& mem_valid $end
$var wire 2 V& stores_to_commit [1:0] $end
$var wire 1 W& store_buffer_stall $end
$var wire 1 X& search_valid $end
$var wire 16 Y& search_data [15:0] $end
$var wire 1 G" out_valid $end
$var wire 16 Z& out_data [15:0] $end
$var wire 6 [& out_ROB [5:0] $end
$var wire 16 \& mem_data [15:0] $end
$var wire 1 A" commit_valid $end
$var wire 16 ]& commit_location [15:0] $end
$var wire 16 ^& commit_data [15:0] $end
$var reg 4 _& head [3:0] $end
$var reg 4 `& tail [3:0] $end
$var integer 32 a& i [31:0] $end
$scope module store_buffer $end
$var wire 1 ]# clk $end
$var wire 16 b& commit_data [15:0] $end
$var wire 16 c& commit_location [15:0] $end
$var wire 1 A" commit_valid $end
$var wire 16 d& data [15:0] $end
$var wire 1 ^ flush $end
$var wire 1 e& input_valid $end
$var wire 16 f& location [15:0] $end
$var wire 16 g& search_location [15:0] $end
$var wire 1 X& search_valid $end
$var wire 2 h& stores_to_commit [1:0] $end
$var wire 1 W& store_stall $end
$var wire 16 i& search_data [15:0] $end
$var reg 4 j& count [3:0] $end
$var reg 4 k& head [3:0] $end
$var reg 16 l& rcommit_data [15:0] $end
$var reg 16 m& rcommit_location [15:0] $end
$var reg 1 n& rcommit_valid $end
$var reg 1 o& rcommit_write $end
$var reg 4 p& tail [3:0] $end
$var integer 32 q& i [31:0] $end
$upscope $end
$upscope $end
$scope module lsu_feeder $end
$var wire 57 r& inOperationA [56:0] $end
$var wire 57 s& inOperationB [56:0] $end
$var wire 57 t& inOperationC [56:0] $end
$var wire 57 u& inOperationD [56:0] $end
$var wire 57 v& outOperationD [56:0] $end
$var wire 1 S" outValidA $end
$var wire 1 P" outValidD $end
$var wire 1 `$ validA $end
$var wire 1 a$ validB $end
$var wire 1 b$ validC $end
$var wire 1 c$ validD $end
$var wire 1 Q" outValidC $end
$var wire 1 R" outValidB $end
$var wire 57 w& outOperationC [56:0] $end
$var wire 57 x& outOperationB [56:0] $end
$var wire 57 y& outOperationA [56:0] $end
$upscope $end
$scope module lsu_queue $end
$var wire 1 ]# clk $end
$var wire 1 z& flush $end
$var wire 23 {& forwardA [22:0] $end
$var wire 23 |& forwardB [22:0] $end
$var wire 23 }& forwardC [22:0] $end
$var wire 23 ~& forwardD [22:0] $end
$var wire 6 !' inLook0A [5:0] $end
$var wire 6 "' inLook0B [5:0] $end
$var wire 6 #' inLook1A [5:0] $end
$var wire 6 $' inLook1B [5:0] $end
$var wire 6 %' inLook2A [5:0] $end
$var wire 6 &' inLook2B [5:0] $end
$var wire 6 '' inLook3A [5:0] $end
$var wire 6 (' inLook3B [5:0] $end
$var wire 4 )' inOperation0 [3:0] $end
$var wire 4 *' inOperation1 [3:0] $end
$var wire 4 +' inOperation2 [3:0] $end
$var wire 4 ,' inOperation3 [3:0] $end
$var wire 6 -' inROB0 [5:0] $end
$var wire 6 .' inROB1 [5:0] $end
$var wire 6 /' inROB2 [5:0] $end
$var wire 6 0' inROB3 [5:0] $end
$var wire 1 1' inReady0 $end
$var wire 1 2' inReady1 $end
$var wire 1 3' inReady2 $end
$var wire 1 4' inReady3 $end
$var wire 2 5' inUse0 [1:0] $end
$var wire 2 6' inUse1 [1:0] $end
$var wire 2 7' inUse2 [1:0] $end
$var wire 2 8' inUse3 [1:0] $end
$var wire 16 9' inValue0A [15:0] $end
$var wire 16 :' inValue0B [15:0] $end
$var wire 16 ;' inValue1A [15:0] $end
$var wire 16 <' inValue1B [15:0] $end
$var wire 16 =' inValue2A [15:0] $end
$var wire 16 >' inValue2B [15:0] $end
$var wire 16 ?' inValue3A [15:0] $end
$var wire 16 @' inValue3B [15:0] $end
$var wire 2 A' taken [1:0] $end
$var wire 57 B' outOperation1 [56:0] $end
$var wire 57 C' outOperation0 [56:0] $end
$var reg 6 D' head [5:0] $end
$var reg 6 E' tail [5:0] $end
$var integer 32 F' i [31:0] $end
$upscope $end
$scope module mem $end
$var wire 1 ]# clk $end
$var wire 15 G' raddr0_ [15:1] $end
$var wire 15 H' raddr1_ [15:1] $end
$var wire 16 I' rdata0_ [15:0] $end
$var wire 16 J' rdata1_ [15:0] $end
$var wire 15 K' rinstruct0_ [15:1] $end
$var wire 15 L' rinstruct1_ [15:1] $end
$var wire 15 M' rinstruct2_ [15:1] $end
$var wire 15 N' rinstruct3_ [15:1] $end
$var wire 16 O' routput0_ [15:0] $end
$var wire 16 P' routput1_ [15:0] $end
$var wire 16 Q' routput2_ [15:0] $end
$var wire 16 R' routput3_ [15:0] $end
$var wire 15 S' waddr0 [15:1] $end
$var wire 16 T' wdata0 [15:0] $end
$var wire 1 A" wen0 $end
$var reg 15 U' raddr0 [15:1] $end
$var reg 15 V' raddr1 [15:1] $end
$var reg 16 W' rdata0 [15:0] $end
$var reg 16 X' rdata1 [15:0] $end
$var reg 15 Y' rinstruct0 [15:1] $end
$var reg 15 Z' rinstruct1 [15:1] $end
$var reg 15 [' rinstruct2 [15:1] $end
$var reg 15 \' rinstruct3 [15:1] $end
$upscope $end
$scope module regs $end
$var wire 1 ]# clk $end
$var wire 3 ]' raddr0_ [2:0] $end
$var wire 3 ^' raddr1_ [2:0] $end
$var wire 3 _' raddr2_ [2:0] $end
$var wire 3 `' raddr3_ [2:0] $end
$var wire 3 a' raddr4_ [2:0] $end
$var wire 3 b' raddr5_ [2:0] $end
$var wire 3 c' raddr6_ [2:0] $end
$var wire 3 d' raddr7_ [2:0] $end
$var wire 6 e' rob_locA [5:0] $end
$var wire 6 f' rob_locB [5:0] $end
$var wire 6 g' rob_locC [5:0] $end
$var wire 6 h' rob_locD [5:0] $end
$var wire 3 i' rob_waddrA [2:0] $end
$var wire 3 j' rob_waddrB [2:0] $end
$var wire 3 k' rob_waddrC [2:0] $end
$var wire 3 l' rob_waddrD [2:0] $end
$var wire 1 '" rob_wenA $end
$var wire 1 &" rob_wenB $end
$var wire 1 %" rob_wenC $end
$var wire 1 b rob_wenD $end
$var wire 16 m' trap_read [15:0] $end
$var wire 3 n' waddr0 [2:0] $end
$var wire 3 o' waddr1 [2:0] $end
$var wire 3 p' waddr2 [2:0] $end
$var wire 16 q' wdata0 [15:0] $end
$var wire 16 r' wdata1 [15:0] $end
$var wire 16 s' wdata2 [15:0] $end
$var wire 1 r wen0 $end
$var wire 1 s wen1 $end
$var wire 1 t wen2 $end
$var wire 23 t' rdata7 [22:0] $end
$var wire 23 u' rdata6 [22:0] $end
$var wire 23 v' rdata5 [22:0] $end
$var wire 23 w' rdata4 [22:0] $end
$var wire 23 x' rdata3 [22:0] $end
$var wire 23 y' rdata2 [22:0] $end
$var wire 23 z' rdata1 [22:0] $end
$var wire 23 {' rdata0 [22:0] $end
$var reg 3 |' raddr0 [2:0] $end
$var reg 3 }' raddr1 [2:0] $end
$var reg 3 ~' raddr2 [2:0] $end
$var reg 3 !( raddr3 [2:0] $end
$var reg 3 "( raddr4 [2:0] $end
$var reg 3 #( raddr5 [2:0] $end
$var reg 3 $( raddr6 [2:0] $end
$var reg 3 %( raddr7 [2:0] $end
$var integer 32 &( i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000 &(
bx %(
bx $(
bx #(
bx "(
bx !(
bx ~'
bx }'
bx |'
bx {'
bx z'
bx y'
bx x'
bx w'
bx v'
bx u'
bx t'
bx s'
bx r'
bx q'
bx p'
bx o'
bx n'
b0 m'
bx l'
bx k'
bx j'
bx i'
b11 h'
b10 g'
b1 f'
b0 e'
bx d'
bx c'
bx b'
bx a'
bx `'
bx _'
bx ^'
bx ]'
bx \'
bx ['
bx Z'
bx Y'
bx X'
bx W'
bx V'
bx U'
bx T'
bx S'
bx R'
bx Q'
bx P'
bx O'
b11 N'
b10 M'
b1 L'
b0 K'
bx J'
bx I'
bz H'
bz G'
b1000000 F'
b0 E'
b0 D'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx C'
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx B'
b0 A'
bx @'
bx ?'
bx >'
bx ='
bx <'
bx ;'
bx :'
bx 9'
bx 8'
bx 7'
bx 6'
bx 5'
04'
03'
02'
x1'
bx 0'
bx /'
bx .'
bx -'
bx ,'
bx +'
bx *'
bx )'
bx ('
bx ''
bx &'
bx %'
bx $'
bx #'
bx "'
bx !'
bx ~&
bx }&
b0xxxxxxxxxxxxxxxxxxxxxx |&
b0xxxxxxxxxxxxxxxxxxxxxx {&
zz&
bx y&
bx x&
bx w&
bx v&
bx u&
bx t&
bx s&
bx r&
bx q&
b0 p&
0o&
0n&
bx m&
bx l&
b0 k&
b0 j&
bx i&
b0 h&
bx g&
bx f&
0e&
bx d&
bx c&
bx b&
bx a&
b11 `&
b0 _&
bx ^&
bx ]&
bx \&
bx [&
bx Z&
bx Y&
xX&
0W&
b0 V&
zU&
bz T&
bx S&
bx R&
bx Q&
b0 P&
1O&
b101 N&
b0 M&
b111 L&
bx K&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx J&
bx I&
bx H&
b0xxxxxxxxxxxxxxxxxxxxxx G&
b0xxxxxxxxxxxxxxxxxxxxxx F&
b1000000 E&
b0 D&
b0 C&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx B&
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx A&
b0 @&
bz ?&
bz >&
bz =&
bz <&
bz ;&
bz :&
bz 9&
bz 8&
bz 7&
bz 6&
bz 5&
bz 4&
z3&
z2&
z1&
z0&
bz /&
bz .&
bz -&
bz ,&
bz +&
bz *&
bz )&
bz (&
bz '&
bz &&
bz %&
bz $&
bz #&
bz "&
bz !&
bz ~%
bx }%
bx |%
b0xxxxxxxxxxxxxxxxxxxxxx {%
b0xxxxxxxxxxxxxxxxxxxxxx z%
zy%
bx x%
bx w%
bx v%
bx u%
bx t%
bx s%
bx r%
bx q%
b101 p%
b0 o%
b111 n%
bx m%
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx l%
bx k%
bx j%
b0xxxxxxxxxxxxxxxxxxxxxx i%
b0xxxxxxxxxxxxxxxxxxxxxx h%
b101 g%
b0 f%
b111 e%
bx d%
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx c%
bx b%
bx a%
b0xxxxxxxxxxxxxxxxxxxxxx `%
b0xxxxxxxxxxxxxxxxxxxxxx _%
b1000000 ^%
b0 ]%
b0 \%
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx [%
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx Z%
b0 Y%
bx X%
bx W%
bx V%
bx U%
bx T%
bx S%
bx R%
bx Q%
bx P%
bx O%
bx N%
bx M%
0L%
0K%
0J%
0I%
bx H%
bx G%
bx F%
bx E%
bx D%
bx C%
bx B%
bx A%
bx @%
bx ?%
bx >%
bx =%
bx <%
bx ;%
bx :%
bx 9%
bx 8%
bx 7%
b0xxxxxxxxxxxxxxxxxxxxxx 6%
b0xxxxxxxxxxxxxxxxxxxxxx 5%
z4%
bx 3%
bx 2%
bx 1%
bx 0%
bx /%
bx .%
bx -%
bx ,%
b0 +%
0*%
x)%
x(%
x'%
x&%
bx %%
bx $%
bx #%
bx "%
bx !%
bx ~$
bx }$
bx |$
bx {$
bx z$
bx y$
bx x$
bx w$
bx v$
bx u$
bx t$
bx s$
bx r$
bx q$
bx p$
bx o$
bx n$
bx m$
bx l$
bx k$
bx j$
bx i$
bx h$
bx g$
bx f$
bx e$
bx d$
0c$
0b$
0a$
x`$
0_$
0^$
0]$
x\$
x[$
xZ$
xY$
xX$
0W$
0V$
0U$
0T$
xS$
xR$
xQ$
xP$
bx O$
bx N$
bx M$
bx L$
bx K$
bx J$
bx I$
bx H$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
bx @$
bx ?$
bx >$
bx =$
bx <$
bx ;$
bx :$
bx 9$
x8$
bx 7$
x6$
bx 5$
bx 4$
bx 3$
bx 2$
bx 1$
bx 0$
bx /$
0.$
0-$
bx ,$
bx +$
bx *$
bx )$
b0 ($
b0 '$
b0 &$
bx %$
bx $$
bx #$
bx "$
0!$
0~#
0}#
0|#
bx {#
bx z#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx y#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx x#
b0 w#
0v#
0u#
bx t#
0s#
bx r#
0q#
b0 p#
bx o#
bx n#
bx m#
bx l#
xk#
0j#
0i#
0h#
xg#
xf#
xe#
b0xxx d#
bx c#
bx b#
bx a#
0`#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx _#
0^#
1]#
bx \#
bx [#
bx Z#
b0 Y#
b0 X#
b0 W#
b0 V#
b1 U#
b10 T#
b11 S#
bx R#
bx Q#
bx P#
bx O#
bx N#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
b0xxxxxxxxxxxxxxxxxxxxxx 2#
b0xxxxxxxxxxxxxxxxxxxxxx 1#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
bx W"
bx V"
bx U"
bx T"
xS"
0R"
0Q"
0P"
b0xxxx O"
0N"
bx M"
bx L"
bx K"
bx J"
bx I"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx H"
xG"
bx F"
0E"
bx D"
bx C"
bx B"
0A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
b10 8"
b100 7"
b110 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
0'"
0&"
0%"
bx $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
bx |
bx {
bx z
bx y
0x
0w
0v
0u
xt
xs
xr
bx q
bx p
bx o
bx n
bx m
bx l
0k
0j
0i
0h
0g
0f
0e
0d
b0 c
0b
b0 a
bz `
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
x5
x4
x3
x2
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
b0 &
x%
0$
x#
x"
bx !
$end
#500
0]#
0O&
#1000
1]
b10 :%
b0 9%
b10 "'
b0 !'
1\
1[
b10 <%
b0 ;%
b10 >%
b0 =%
b10 $'
b0 #'
b10 &'
b0 %'
1Z
1b
1x
1j
b10 @%
b10 ('
b0 ?%
b0 ''
b10 K#
b0 L#
19
b0 M%
b0 5'
b10 ""
1d
b0 N%
b0 O%
b0 6'
b0 7'
1%"
1P
1&"
1O
x'
x(
1'"
1N
1w
1v
1u
01'
bx =#
b0 P%
b0 8'
b11 E%
b11 -'
b11 }
1k
15
b10 ~
1h
04
b10 !"
1f
03
b0 ^'
b0 ]'
02
b0 >#
0S"
b0 <#
b0 ;#
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 %$
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 3%
b11 F%
b11 G%
bx0000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 o#
bx0000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 x%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 n#
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 w%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 W"
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 y&
b11 /'
b11 d'
b1 c'
b11000000000000000000 V#
11
b100 b'
b0 a'
b10 `'
b0 _'
b0 ."
b0 /"
b11 .'
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 $$
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 2%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 #$
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 1%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 m#
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 v%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 U"
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 w&
b11 ("
b1 )"
b100 y
b100 l'
b11 ="
b1000011 2"
b11 *#
b1 9"
b100 *"
b0 +"
b11 z
b11 k'
b100 >"
b1111111000000100 3"
b100 +#
b10000000000100000000 W#
1u"
b110 :"
b10 ,"
b10000100001011 1"
b0 -"
b10 {
b10 j'
b10 ?"
b10 4"
b10 ,#
b10000000000100000000 X#
1v"
b110 ;"
b1 |
b1 i'
b0 @"
b1000000000 5"
b0 -#
b10000000000100000000 Y#
1w"
b110 <"
xA"
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 V"
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 x&
b11 H%
b11 0'
b0xxx .#
b101 L'
b110 M'
b111 N'
b100 K'
b1 P&
bz V'
bz U'
b1100001000011 &#
b1100001000011 R'
b11 \'
b110011000000100 '#
b110011000000100 Q'
b10 ['
b110010000000010 (#
b110010000000010 P'
b1 Z'
b110001000000000 )#
b110001000000000 O'
b0 Y'
bx D&
bx E'
xn&
xo&
b1 _&
b100 `&
0G$
0F$
0E$
0D$
b0 |$
bx000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 J#
bx000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 ,%
bx000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 q%
bx000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 r&
b0 x$
0&%
0`$
b0 L$
b0 }$
bx000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 I#
bx000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 -%
bx000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 r%
bx000001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0 s&
b1 y$
0'%
b0 M$
b0 ~$
bx000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 H#
bx000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 .%
bx000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 s%
bx000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 t&
b10 z$
0[$
0Z$
0Y$
0X$
0(%
b0 N$
b0 !%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 "$
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 0%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 l#
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 u%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 T"
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 v&
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 G#
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 /%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 t%
bx000011000000000010xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 u&
b11 {$
0)%
b0 O$
b0xxxxxxxxxxxxxxxx0000000000000000 !
b0xxxxxxxxxxxxxxxxxxxxx 1#
b0xxxxxxxxxxxxxxxxxxxxx 6%
b0xxxxxxxxxxxxxxxxxxxxx `%
b0xxxxxxxxxxxxxxxxxxxxx i%
b0xxxxxxxxxxxxxxxxxxxxx {%
b0xxxxxxxxxxxxxxxxxxxxx G&
b0xxxxxxxxxxxxxxxxxxxxx |&
b0xxxxx ,$
b0xxxxx 7$
b0xxxxxxxxxxxxxxxxxxxxx 0#
b0xxxxxxxxxxxxxxxxxxxxx 7%
b0xxxxxxxxxxxxxxxxxxxxx a%
b0xxxxxxxxxxxxxxxxxxxxx j%
b0xxxxxxxxxxxxxxxxxxxxx |%
b0xxxxxxxxxxxxxxxxxxxxx H&
b0xxxxxxxxxxxxxxxxxxxxx }&
08$
b1010 8"
b1100 7"
b1110 6"
b1000 a
b1000 +%
b1000 :$
b1000000 ^%
b101 g%
b101 p%
b1000000 E&
b101 N&
b1000000 F'
1]#
1O&
#1500
0]#
0O&
#2000
0]
b0 R%
b0 T%
b0 V%
0\
0[
0Z
b0 Q%
0b
0x
b10 <'
b0 X%
b0 @'
b0 S%
b0 U%
b100 >'
b0 ='
0j
b10 :%
b0 3#
b0 ;'
b0 :'
b0 9'
b10 <%
b10 >%
b0 W%
b0 ?'
09
b0 9%
b100 5#
b10 7#
b0 9#
b0 4#
b0 6#
b0 8#
b0 :#
b0 ;%
b0 =%
b10 @%
b10 ('
b0 =#
b0 ""
0d
1I%
b1 O#
b10 K#
0P
b11 M#
0O
0'
0(
0N
b1 A%
12'
b0 ?%
b0 ''
0w
0&"
0v
0'"
0u
b100001100000000001000000000000000000000000000000000001 %$
b100001100000000001000000000000000000000000000000000001 3%
b1 B%
b1 C%
1R"
b0 6'
b1 $'
bx #'
b1 .'
b110 *'
13'
b11 &'
bx %'
b10 /'
b110 +'
11'
b0 }
0k
x5
0%"
b0 L#
b0 ~
0h
b0 !"
0f
bx ^'
bx ]'
b100001100000000001000000000000000000000000000000000001 $$
b100001100000000001000000000000000000000000000000000001 2%
b100001100000000001000000000000000000000000000000000001 #$
b100001100000000001000000000000000000000000000000000001 1%
b100001100000000001000000000000000000000000000000000001 n#
b100001100000000001000000000000000000000000000000000001 w%
b100001100000000001000000000000000000000000000000000001 m#
b100001100000000001000000000000000000000000000000000001 v%
1S"
b110000001xxxxxx00000100000000000000000000000000000010001 V"
b110000001xxxxxx00000100000000000000000000000000000010001 x&
1Q"
b110000010xxxxxx00001100000000000000000000000000000100001 U"
b110000010xxxxxx00001100000000000000000000000000000100001 w&
bx "'
bx !'
b0 -'
b110 )'
bx d'
bx c'
b0 V#
01
bx b'
bx a'
x4
bx `'
bx _'
x3
bx ."
bx /"
x2
b1001 L'
b1010 M'
b1011 N'
b1000 K'
b1001 .#
b101 U#
b101 f'
b110 T#
b110 g'
b111 S#
b111 h'
b1 D%
b1 ,'
1!$
b0xxx0000xxxxxxxxxxxxxx00000000000000000000000000000000001 o#
b0xxx0000xxxxxxxxxxxxxx00000000000000000000000000000000001 x%
b110000000xxxxxxxxxxxx00000000000000000000000000000000001 W"
b110000000xxxxxxxxxxxx00000000000000000000000000000000001 y&
b10 ?#
b0 @#
b11 A#
b0xxxxxx B#
b1 C#
b0xxxxxx D#
b0xxxxxx E#
b0xxxxxx F#
bx ("
bx )"
bx y
bx l'
bx ="
bx 2"
bx *#
bx 9"
bx *"
bx +"
bx z
bx k'
bx >"
bx 3"
bx +#
b0 W#
0u"
bx :"
bx ,"
bx 1"
bx -"
bx {
bx j'
bx ?"
bx 4"
bx ,#
b0 X#
0v"
bx ;"
bx |
bx i'
bx @"
bx 5"
bx -#
b0 Y#
0w"
bx <"
b10000 :$
b10010 8"
b10100 7"
b10110 6"
b10000 a
b10000 +%
b100 &
b100 e'
b100 ($
b0xxxxxxxxxxxxxxxx0000000000001000 !
b11 !%
b100001100000000001000000000000000000000000000000000001 "$
b100001100000000001000000000000000000000000000000000001 0%
b100001100000000001000000000000000000000000000000000001 l#
b100001100000000001000000000000000000000000000000000001 u%
b100001100000000001000000000000000000000000000000000001 T"
b100001100000000001000000000000000000000000000000000001 v&
b100001100000000001000000000000000000000000000000000001 G#
b100001100000000001000000000000000000000000000000000001 /%
b100001100000000001000000000000000000000000000000000001 t%
b100001100000000001000000000000000000000000000000000001 u&
b1 k$
b11 w$
b1 v$
1S$
b100 %%
1)%
b11 g$
b1000011 o$
b11 K$
1W$
b11000000000000000000 O$
b10 ~$
b110000010xxxxxx00001100000000000000000000000000000100001 H#
b110000010xxxxxx00001100000000000000000000000000000100001 .%
b110000010xxxxxx00001100000000000000000000000000000100001 s%
b110000010xxxxxx00001100000000000000000000000000000100001 t&
b110 j$
b100 u$
b0 t$
0R$
b11 $%
1(%
b100 f$
b1111111000000100 n$
b100 J$
1b$
b10000000000100000000 N$
b10 }$
b110000001xxxxxx00000100000000000000000000000000000010001 I#
b110000001xxxxxx00000100000000000000000000000000000010001 -%
b110000001xxxxxx00000100000000000000000000000000000010001 r%
b110000001xxxxxx00000100000000000000000000000000000010001 s&
b110 i$
b10 s$
b0 r$
0Q$
b10 #%
1'%
b10 e$
b10 m$
b10 I$
1a$
b10000000000100000000 M$
b10 |$
b0 q$
b0 p$
0P$
b110000000xxxxxxxxxxxx00000000000000000000000000000000001 J#
b110000000xxxxxxxxxxxx00000000000000000000000000000000001 ,%
b110000000xxxxxxxxxxxx00000000000000000000000000000000001 q%
b110000000xxxxxxxxxxxx00000000000000000000000000000000001 r&
b110 h$
b1 "%
1&%
b0 d$
b1000000000 l$
b0 H$
1`$
b10000000000100000000 L$
b10 _&
b101 `&
b10 t'
b11 %(
b0 u'
b1 $(
b11 v'
b100 #(
b0xxxxxx w'
b0 "(
b1 x'
b10 !(
b0xxxxxx y'
b0 ~'
b0xxxxxx z'
b0 }'
b0xxxxxx00000000000000000xxxxxx00000000000000000xxxxxx0000000000000000000000100000000000000000xxxxxx000000000000000000000110000000000000000000000000000000000000000000010 0"
b0xxxxxx {'
b0 |'
bx &#
bx R'
b111 \'
bx '#
bx Q'
b110 ['
bx (#
bx P'
b101 Z'
bx )#
bx O'
b100 Y'
b10 P&
b1000000 F'
b101 N&
b1000000 E&
b101 p%
b101 g%
b1000000 ^%
1]#
1O&
#2500
0]#
0O&
#3000
bx R%
bx :%
bx :'
bx T%
bx <%
bx V%
bx >%
bx X%
bx @'
bx Q%
bx 9%
bx 9'
bx @%
bx ('
bx 3#
bx S%
bx ;%
bx U%
bx =%
bx ;'
bx ='
bx 9#
bx K#
bx W%
bx ?'
bx ?%
bx ''
bx 4#
bx M#
bx 6#
bx 8#
bx :#
bx L#
bx O#
bx 7#
bx 5#
b111 E%
bx A%
b1 w#
b1 Y%
01'
0S"
03'
bx >'
bx &'
bx %'
b111 /'
bx +'
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 %$
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 3%
b111 F%
bx B%
b111 G%
bx C%
1v#
02'
bx "'
bx !'
b111 -'
bx )'
bx <'
bx $'
bx #'
b111 .'
bx *'
0Q"
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 U"
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 w&
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 $$
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 2%
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 #$
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 1%
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 n#
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 w%
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 m#
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 v%
0I%
bx ?#
bx @#
bx A#
bx B#
bx C#
bx D#
bx E#
bx F#
b0xxxxxxxxxxxxxxxxxxxxxx /#
b0xxxxxxxxxxxxxxxxxxxxxx 8%
b0xxxxxxxxxxxxxxxxxxxxxx b%
b0xxxxxxxxxxxxxxxxxxxxxx k%
b0xxxxxxxxxxxxxxxxxxxxxx }%
b0xxxxxxxxxxxxxxxxxxxxxx I&
b0xxxxxxxxxxxxxxxxxxxxxx ~&
0G"
bx0001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 o#
bx0001xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 x%
0R"
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 W"
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 y&
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 V"
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 x&
bx D%
bx ,'
b111 H%
b111 0'
0!$
b1101 L'
b1110 M'
b1111 N'
b1100 K'
b11 P&
b1011 \'
b1010 ['
b1001 Z'
b1000 Y'
bx t'
bx %(
bx u'
bx $(
bx v'
bx #(
bx w'
bx "(
bx x'
bx !(
bx y'
bx ~'
bx z'
bx }'
bx 0"
bx {'
bx |'
b1 ]%
b100010000110000000000100000000000000000000000000000000000 y#
b100010000110000000000100000000000000000000000000000000000 [%
b100010000110000000000100000000000000000000000000000000000 c%
b11 _&
b110 `&
b0 |$
bx q$
bx p$
xP$
bx h$
bx000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 J#
bx000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 ,%
bx000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 q%
bx000100xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 r&
b100 x$
bx "%
0&%
bx d$
bx l$
bx H$
0`$
b0 L$
b0 }$
bx i$
bx000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 I#
bx000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 -%
bx000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 r%
bx000101xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 s&
b101 y$
bx s$
bx r$
xQ$
bx #%
0'%
bx e$
bx m$
bx I$
0a$
b0 M$
b0 ~$
bx j$
bx000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 H#
bx000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 .%
bx000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 s%
bx000110xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 t&
b110 z$
bx u$
bx t$
xR$
bx $%
0(%
bx f$
bx n$
bx J$
0b$
b0 N$
b0 !%
bx k$
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 "$
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 0%
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 l#
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 u%
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 T"
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 v&
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 G#
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 /%
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 t%
bx000111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx000 u&
b111 {$
bx w$
bx v$
xS$
bx %%
0)%
bx g$
bx o$
bx K$
0W$
b0 O$
b11010 8"
b11100 7"
b11110 6"
b11000 a
b11000 +%
b11000 :$
b1000000 ^%
b101 g%
b101 p%
b1000000 E&
b101 N&
b1000000 F'
1]#
1O&
#3500
0]#
0O&
#4000
1s#
b100001100000000000000000000000000000000 t#
b100001100000000000000000000000000000000 d%
b0 e%
b0 w#
b0 Y%
0v#
b10001 L'
b10010 M'
b10011 N'
b10000 K'
b100000 :$
b100010 8"
b100100 7"
b100110 6"
b100000 a
b100000 +%
b100 _&
b111 `&
b10000 f%
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx y#
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx [%
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx c%
b1 \%
b1111 \'
b1110 ['
b1101 Z'
b1100 Y'
b100 P&
b1000000 F'
b101 N&
b1000000 E&
b101 p%
b101 g%
b1000000 ^%
1]#
1O&
#4500
0]#
0O&
#5000
0s#
bx t#
bx d%
b111 e%
0"
1#
b11 \#
b0 {#
b10101 L'
b10110 M'
b10111 N'
b10100 K'
b101 P&
b10011 \'
b10010 ['
b10001 Z'
b10000 Y'
b0 f%
b101 _&
b0 `&
b0 0$
b0 /$
b11 +$
b1 )$
b10000110000000000000000 2#
b10000110000000000000000 5%
b10000110000000000000000 _%
b10000110000000000000000 h%
b10000110000000000000000 z%
b10000110000000000000000 F&
b10000110000000000000000 {&
1-$
b101010 8"
b101100 7"
b101110 6"
b101000 a
b101000 +%
b101000 :$
b1000000 ^%
b101 g%
b101 p%
b1000000 E&
b101 N&
b1000000 F'
1]#
1O&
#5500
0]#
0O&
#6000
x"
bx \#
x#
b11001 L'
b11010 M'
b11011 N'
b11000 K'
bx {#
b110000 :$
b110010 8"
b110100 7"
b110110 6"
b110000 a
b110000 +%
bx 0$
bx /$
bx +$
bx )$
b0xxxxxxxxxxxxxxxxxxxxxx 2#
b0xxxxxxxxxxxxxxxxxxxxxx 5%
b0xxxxxxxxxxxxxxxxxxxxxx _%
b0xxxxxxxxxxxxxxxxxxxxxx h%
b0xxxxxxxxxxxxxxxxxxxxxx z%
b0xxxxxxxxxxxxxxxxxxxxxx F&
b0xxxxxxxxxxxxxxxxxxxxxx {&
0-$
b110 _&
b1 `&
b10111 \'
b10110 ['
b10101 Z'
b10100 Y'
b110 P&
b1000000 F'
b101 N&
b1000000 E&
b101 p%
b101 g%
b1000000 ^%
1]#
1O&
#6500
0]#
0O&
#7000
b11101 L'
b11110 M'
b11111 N'
b11100 K'
b111 P&
b11011 \'
b11010 ['
b11001 Z'
b11000 Y'
b111 _&
b10 `&
b111010 8"
b111100 7"
b111110 6"
b111000 a
b111000 +%
b111000 :$
b1000000 ^%
b101 g%
b101 p%
b1000000 E&
b101 N&
b1000000 F'
1]#
1O&
#7500
0]#
0O&
#8000
b100001 L'
b100010 M'
b100011 N'
b100000 K'
b1000000 :$
b1000010 8"
b1000100 7"
b1000110 6"
b1000000 a
b1000000 +%
b0 _&
b11 `&
b11111 \'
b11110 ['
b11101 Z'
b11100 Y'
b1000 P&
b1000000 F'
b101 N&
b1000000 E&
b101 p%
b101 g%
b1000000 ^%
1]#
1O&
#8500
0]#
0O&
#9000
b100101 L'
b100110 M'
b100111 N'
b100100 K'
b1001 P&
b100011 \'
b100010 ['
b100001 Z'
b100000 Y'
b1 _&
b100 `&
b1001010 8"
b1001100 7"
b1001110 6"
b1001000 a
b1001000 +%
b1001000 :$
b1000000 ^%
b101 g%
b101 p%
b1000000 E&
b101 N&
b1000000 F'
1]#
1O&
#9500
0]#
0O&
#10000
b101001 L'
b101010 M'
b101011 N'
b101000 K'
b1010000 :$
b1010010 8"
b1010100 7"
b1010110 6"
b1010000 a
b1010000 +%
b10 _&
b101 `&
b100111 \'
b100110 ['
b100101 Z'
b100100 Y'
b1010 P&
b1000000 F'
b101 N&
b1000000 E&
b101 p%
b101 g%
b1000000 ^%
1]#
1O&
#10500
0]#
0O&
#11000
b101101 L'
b101110 M'
b101111 N'
b101100 K'
b1011 P&
b101011 \'
b101010 ['
b101001 Z'
b101000 Y'
b11 _&
b110 `&
b1011010 8"
b1011100 7"
b1011110 6"
b1011000 a
b1011000 +%
b1011000 :$
b1000000 ^%
b101 g%
b101 p%
b1000000 E&
b101 N&
b1000000 F'
1]#
1O&
#11500
0]#
0O&
#12000
b110001 L'
b110010 M'
b110011 N'
b110000 K'
b1100000 :$
b1100010 8"
b1100100 7"
b1100110 6"
b1100000 a
b1100000 +%
b100 _&
b111 `&
b101111 \'
b101110 ['
b101101 Z'
b101100 Y'
b1100 P&
b1000000 F'
b101 N&
b1000000 E&
b101 p%
b101 g%
b1000000 ^%
1]#
1O&
#12500
0]#
0O&
#13000
b110101 L'
b110110 M'
b110111 N'
b110100 K'
b1101 P&
b110011 \'
b110010 ['
b110001 Z'
b110000 Y'
b101 _&
b0 `&
b1101010 8"
b1101100 7"
b1101110 6"
b1101000 a
b1101000 +%
b1101000 :$
b1000000 ^%
b101 g%
b101 p%
b1000000 E&
b101 N&
b1000000 F'
1]#
1O&
#13500
0]#
0O&
#14000
b111001 L'
b111010 M'
b111011 N'
b111000 K'
b1110000 :$
b1110010 8"
b1110100 7"
b1110110 6"
b1110000 a
b1110000 +%
1*%
b110 _&
b1 `&
b110111 \'
b110110 ['
b110101 Z'
b110100 Y'
b1110 P&
b1000000 F'
b101 N&
b1000000 E&
b101 p%
b101 g%
b1000000 ^%
1]#
1O&
#14500
0]#
0O&
#15000
b111101 L'
b111110 M'
b111111 N'
b111100 K'
b111011 \'
b111010 ['
b111001 Z'
b111000 Y'
b111 _&
b10 `&
b1111010 8"
b1111100 7"
b1111110 6"
b1111000 a
b1111000 +%
b1111000 :$
b1000000 ^%
b101 g%
b101 p%
b1000000 E&
b101 N&
b1000000 F'
1]#
1O&
